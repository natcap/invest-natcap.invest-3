from __future__ import print_function

import unittest
import logging
import os
import subprocess
import math
import numpy as np
import random
import time
import csv

from osgeo import gdal
from osgeo import ogr
from nose.plugins.skip import SkipTest

import invest_test_core
from invest_natcap.coastal_vulnerability import coastal_vulnerability_core
import coastal_vulnerability_cython_core


LOGGER = logging.getLogger('coastal_vulnerability_test')
logging.basicConfig(format='%(asctime)s %(name)-15s %(levelname)-8s \
    %(message)s', level=logging.DEBUG, datefmt='%m/%d/%Y %H:%M:%S ')

class TestCoastalVulnerability(unittest.TestCase):
    """Main testing class for the coastal vulnerability tests"""
    
    def test_cast_ray(self):
        land_sea_array = np.array([[1,1,1,1,1],
                                   [0,0,0,0,0],
                                   [0,0,0,0,0],
                                   [0,0,0,0,0],
                                   [0,0,0,0,0]], dtype=np.int)

        origin = [4, 0]
        direction = [-1, 1]
        d_max = 5
        distance = coastal_vulnerability_core.cast_ray(
            origin, direction, d_max, land_sea_array)
        distance_c = coastal_vulnerability_cython_core.cast_ray(
            origin, direction, d_max, land_sea_array)
        LOGGER.info("distance %s" % distance)
        LOGGER.info("distance_c %s" % distance_c)
